{"version":3,"sources":["Table.js","Chart.js","store.js","App.js","calculations.js","index.js"],"names":["Table","_ref","output","payments","filter","year","i","balance","interestYearly","reduce","acc","index","interestTotal","overpaymentTotal","overpayment","rows","concat","Object","toConsumableArray","partial","Math","round","react_default","a","createElement","className","map","row","key","d","toLocaleString","margin","width","height","x","scaleLinear","range","y","actual","line","baseline","Chart","chart","useRef","useEffect","chartEl","select","current","domain","length","call","axisBottom","ticks","min","axisLeft","transition","attr","ref","viewBox","transform","defaultState","initial","rate","years","monthlyOverpayment","overpayments","month","amount","update","setState","newState","state","url","URL","window","location","search","decodeURIComponent","jQuery","param","history","pushState","store","params","originalState","objectSpread","replace","deparam","_useState","useState","_useState2","slicedToArray","setInitial","v","setRate","setYears","setMonthlyOverpayment","setOverpayments","src_App","_store","updateOverpayment","target","defineProperty","name","value","_calculate","_ref$overpayments","monthlyRatePct","monthlyPayment","pow","_loop","overpaymentYearly","_loop2","val","interestMonth","undefined","push","calculate","id","maxLength","onChange","e","type","step","_ref2","max","onClick","_","j","toFixed","href","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a0dbe614.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport default ({ payments }) => {\r\n    let output = payments\r\n        .filter((year, i) => i > 0 && (year.balance > 0 || year.interestYearly > 0))\r\n        .reduce(\r\n            (acc, year, index) => ({\r\n                interestTotal: acc.interestTotal + year.interestYearly,\r\n                overpaymentTotal: acc.overpaymentTotal + year.overpayment,\r\n                rows: [\r\n                    ...acc.rows,\r\n                    [\r\n                        year.partial ? year.partial + 'm' : index + 1,\r\n                        Math.round(year.interestYearly || 0),\r\n                        Math.round(year.overpayment),\r\n                        Math.round(year.balance)\r\n                    ]\r\n                ]\r\n            }),\r\n            { interestTotal: 0, overpaymentTotal: 0, rows: [] }\r\n        );\r\n\r\n    return (\r\n        <table className=\"table\">\r\n            <thead>\r\n                <tr>\r\n                    <th>Years</th>\r\n                    <th>Interest</th>\r\n                    <th>Overpayment</th>\r\n                    <th>Balance</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {output.rows.map((row, index) => (\r\n                    <tr key={index}>\r\n                        {row.map((d, i) => (\r\n                            <td key={i}>{d.toLocaleString()}</td>\r\n                        ))}\r\n                    </tr>\r\n                ))}\r\n            </tbody>\r\n            <tfoot>\r\n                <tr>\r\n                    <td>Total</td>\r\n                    <td>\r\n                        {Math.round(output.interestTotal).toLocaleString()}\r\n                    </td>\r\n                    <td>{Math.round(output.overpaymentTotal).toLocaleString()}</td>\r\n                    <td />\r\n                </tr>\r\n            </tfoot>\r\n        </table>\r\n    );\r\n};\r\n","import React, { useEffect, useRef } from 'react';\n\nimport { select } from 'd3-selection';\nimport { line } from 'd3-shape';\nimport { scaleLinear } from 'd3-scale';\nimport { axisBottom, axisLeft } from 'd3-axis';\nimport 'd3-transition';\n\nconst margin = { top: 20, right: 20, bottom: 20, left: 80 },\n  fullWidth = 800,\n  fullHeight = 300,\n  width = fullWidth - margin.left - margin.right,\n  height = fullHeight - margin.top - margin.bottom;\n\nconst x = scaleLinear().range([0, width]);\n\nconst y = scaleLinear().range([0, height]);\n\nconst actual = line()\n  .x((d, i) => x(i + (d.partial / 12 || 1) - 1))\n  .y(d => y(d.balance));\n\nconst baseline = line()\n  .x((d, i) => x(i))\n  .y(d => y(d.baseline));\n\nexport default ({ payments }) => {\n  const chart = useRef(null);\n\n  useEffect(() => {\n    const chartEl = select(chart.current);\n    x.domain([0, payments.length - 1]);\n    y.domain([payments[0].balance, 0]);\n\n    chartEl\n      .select('.x')\n      .call(axisBottom(x).ticks(Math.min(payments.length, 30)));\n\n    chartEl.select('.y').call(axisLeft(y));\n\n    chartEl\n      .select('.baseline')\n      .transition()\n      .attr('d', baseline(payments));\n\n    chartEl\n      .select('.actual')\n      .transition()\n      .attr('d', actual(payments));\n  }, [payments]);\n\n  return (\n    <svg\n      ref={chart}\n      height=\"100%\"\n      width=\"100%\"\n      viewBox={`0 0 ${fullWidth} ${fullHeight}`}\n    >\n      <g transform={`translate(${margin.left},${margin.top})`}>\n        <g className=\"axis x\" transform={`translate(0, ${height})`} />\n        <g className=\"axis y\" />\n        <path className=\"line baseline\" />\n        <path className=\"line actual\" />\n      </g>\n    </svg>\n  );\n};\n","import { useState } from 'react';\n\nconst defaultState = {\n    initial: '200000',\n    rate: '5',\n    years: '25',\n    monthlyOverpayment: '0',\n    overpayments: [{ month: '1', year: '0', amount: '0' }]\n}\n\nfunction getParams() {\n    return window.location.search.replace(/^\\?/, '');\n}\n\nfunction encode(state) {\n    return decodeURIComponent(window.jQuery.param(state));\n}\n\nfunction decode(params) {\n    return window.jQuery.deparam(params);\n}\n\nfunction update(setState, newState) {\n    setState(newState);\n    const url = new URL(window.location);\n    url.search = `?${encode(newState)}`;\n    window.history.pushState(newState, \"\", url);\n}\n\nfunction store() {\n    const originalState = { ...defaultState, ...decode(getParams())};\n    const [state, setState] = useState(originalState);\n    const setInitial = v => update(setState, { ...state, initial: v });\n    const setRate = v => update(setState, { ...state, rate: v });\n    const setYears = v => update(setState, { ...state, years: v });\n    const setMonthlyOverpayment = v => update(setState, { ...state, monthlyOverpayment: v });\n    const setOverpayments = v => update(setState, { ...state, overpayments: v });\n\n    return {\n        state,\n        setState,\n        setInitial,\n        setRate,\n        setYears,\n        setMonthlyOverpayment,\n        setOverpayments\n    }\n}\n\nexport default store;\n","import React from 'react';\n\nimport './App.css';\n\nimport Table from './Table';\nimport Chart from './Chart';\nimport store from './store';\nimport calculate from './calculations';\n\nexport default () => {\n    const {\n        state,\n        setInitial,\n        setRate,\n        setYears,\n        setMonthlyOverpayment,\n        setOverpayments\n    } = store();\n    const updateOverpayment = index => ({ target }) =>\n        setOverpayments(\n            state.overpayments.map((overpayment, i) =>\n                i === index\n                    ? { ...overpayment, [target.name]: target.value }\n                    : overpayment\n            )\n        );\n\n    const { monthlyPayment, payments } = calculate({\n        initial: +state.initial,\n        years: +state.years,\n        rate: +state.rate,\n        monthlyOverpayment: +state.monthlyOverpayment,\n        overpayments: state.overpayments\n    });\n\n    return (\n        <div>\n            <nav className=\"navbar p-2 mb-4\">\n                <div className=\"navbar-brand\">Mortgage Calculator</div>\n            </nav>\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div id=\"input-side\" className=\"col-md-4 col-sm-12\">\n                        <div id=\"core\" className=\"mb-4\">\n                            <h2 className=\"pb-2\">Core</h2>\n                            <div className=\"row\">\n                                <div className=\"col-md-4 col-sm-12\">\n                                    <label className=\"form-label\">Amount</label>\n                                    <input\n                                        maxLength={7}\n                                        value={state.initial}\n                                        onChange={e => setInitial(e.target.value)}\n                                        className=\"form-control\"\n                                    />\n                                </div>\n                                <div className=\"col-md-4 col-sm-12\">\n                                    <label className=\"form-label\">Years</label>\n                                    <input\n                                        type=\"number\"\n                                        maxLength={2}\n                                        value={state.years}\n                                        onChange={e => setYears(e.target.value)}\n                                        className=\"form-control\"\n                                    />\n                                </div>\n                                <div className=\"col-md-4 col-sm-12\">\n                                    <label className=\"form-label\">Rate</label>\n                                    <input\n                                        type=\"number\"\n                                        step={0.1}\n                                        value={state.rate}\n                                        onChange={e => setRate(e.target.value)}\n                                        className=\"form-control\"\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        <div id=\"overpayment\">\n                            <h2 className=\"pb-2\">Overpayment</h2>\n                            <div className=\"row pb-2\">\n                                <label className=\"col-sm-3 col-form-label\">Monthly</label>\n                                <div className=\"col-sm-9\">\n                                    <input\n                                        type=\"number\"\n                                        maxLength={5}\n                                        value={state.monthlyOverpayment}\n                                        onChange={e => setMonthlyOverpayment(e.target.value)}\n                                        className=\"form-control\"\n                                    />\n                                </div>\n                            </div>\n                            <div className=\"row\">\n                                <label className=\"col-sm-1 col-form-label\">#</label>\n                                <label className=\"col-sm-3 col-form-label\">Year</label>\n                                <label className=\"col-sm-3 col-form-label\">Month</label>\n                                <label className=\"col-sm-3 col-form-label\">Amount</label>\n                            </div>\n                            {state.overpayments.map(({ year, month, amount }, i) => (\n                                <div key={i} className=\"row\">\n                                    <div className=\"col-sm-1 col-form-label\">\n                                        <label className=\"btn text-muted\">{i + 1}</label>\n                                    </div>\n                                    <div className=\"col-sm-3 col-form-label\">\n                                    <input\n                                        type=\"number\"\n                                        min=\"0\"\n                                        max={state.years}\n                                        value={year}\n                                        name=\"year\"\n                                        onChange={updateOverpayment(i)}\n                                        className=\"form-control\"\n                                    />\n                                    </div>\n                                    <div className=\"col-sm-3 col-form-label\">\n                                    <input\n                                        type=\"number\"\n                                        min=\"1\"\n                                        max=\"12\"\n                                        value={month}\n                                        name=\"month\"\n                                        onChange={updateOverpayment(i)}\n                                        className=\"form-control\"\n                                    />\n                                    </div>\n                                    <div className=\"col-sm-3 col-form-label\">\n                                    <input\n                                        type=\"text\"\n                                        value={amount}\n                                        name=\"amount\"\n                                        onChange={updateOverpayment(i)}\n                                        className=\"form-control\"\n                                    />\n                                    </div>\n                                    <div className=\"col-sm-2 col-form-label\">\n                                    {i === state.overpayments.length - 1 ? (\n                                        <button\n                                                className=\"btn btn-primary\"\n                                            onClick={() =>\n                                                setOverpayments([...state.overpayments, {}])\n                                            }\n                                        >\n                                            ⊕\n                                        </button>\n                                    ) : (\n                                        <button\n                                                    className=\"btn btn-primary\"\n                                            onClick={() =>\n                                                setOverpayments(state.overpayments.filter((_, j) => j !== i))\n                                            }\n                                        >\n                                            🅧\n                                        </button>\n                                    )}\n                                    </div>\n                                </div>\n                            ))}\n                        </div>\n                    </div>\n                    <div id=\"output-side\" className=\"col-md-8 col-sm-12\">\n                        <div className=\"row\">\n                            <div className=\"col-6\">\n                                <h2>Estimate</h2>\n                            </div>\n                            <div className=\"col-6\">\n                                <div className=\"font-monospace text-end fs-4 text-primary\">Monthly payment: {(+state.monthlyOverpayment + monthlyPayment).toFixed(2)}</div>\n                            </div>\n                        </div>\n                        <div id=\"chart\" className=\"pb-4\">\n                            <Chart payments={payments} />\n                        </div>\n                        <div id=\"table\" className=\"container\">\n                            <div className=\"col-8 offset-2\">\n                            <Table payments={payments} />\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div className=\"p-5 text-center text-muted\">\n                Based on original work by <a href=\"https://github.com/paulhoughton/\">Paul Houghton</a>. This page is a private copy of <a href=\"https://github.com/paulhoughton/mortgage\">mortgage overpayment calculator</a>.\n            </div>\n        </div>\n    );\n};\n","export default function calculatePayments({\r\n  initial,\r\n  years,\r\n  rate,\r\n  monthlyOverpayment,\r\n  overpayments = []\r\n}) {\r\n  const monthlyRatePct = rate / 1200;\r\n  const monthlyPayment =\r\n    monthlyRatePct === 0\r\n      ? initial / years / 12\r\n      : (initial * monthlyRatePct) /\r\n        (1 - Math.pow(1 / (1 + monthlyRatePct), years * 12));\r\n  let balance = initial;\r\n  let baseline = initial;\r\n  let payments = [{ overpayment: 0, balance, baseline }];\r\n  let partial;\r\n\r\n  for (let year = 0; year < years; year++) {\r\n    let interestYearly = 0;\r\n    let overpaymentYearly = 0;\r\n    for (let month = 1; month <= 12; month++) {\r\n      const overpayment = overpayments\r\n        .filter(x => +x.year === year && +x.month === month)\r\n        .reduce((acc, val) => acc + +val.amount, 0);\r\n      let interestMonth = balance * monthlyRatePct;\r\n      interestYearly += interestMonth;\r\n      overpaymentYearly += overpayment;\r\n      balance -=\r\n        monthlyPayment + monthlyOverpayment + overpayment - interestMonth;\r\n      baseline -= monthlyPayment - baseline * monthlyRatePct;\r\n\r\n      if (balance <= 0) {\r\n        balance = 0;\r\n        if (partial === undefined && month !== 12) {\r\n          partial = month;\r\n        }\r\n      }\r\n    }\r\n\r\n    payments.push({\r\n      baseline,\r\n      interestYearly,\r\n      balance,\r\n      partial,\r\n      overpayment: overpaymentYearly + +monthlyOverpayment * (partial || 12)\r\n    });\r\n    if (partial) partial = 0;\r\n  }\r\n  return { monthlyPayment, payments };\r\n}\r\n","import 'bootstrap/dist/css/bootstrap.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}